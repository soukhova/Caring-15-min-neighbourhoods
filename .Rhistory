Care_Category == "Health-centric") |>
group_by(from_id) |>
summarise(Care_Access_Status2 = case_when(all(copp_isc >= 1 & copp_isc <= 2) ~ "Completely caring",
all(copp_isc >= 3) ~ "Very completely caring"))
no_dependents <- no_dependents |> left_join(no_dependents2, by= c("from_id"))
View(no_dependents)
no_dependents2 <- access_15 |> filter(Care_Category == "Errand-centric"|
Care_Category == "Grocery-centric" |
Care_Category == "Health-centric") |>
group_by(from_id) |>
summarise(Care_Access_Status2 = case_when(all(copp_isc >= 1 | copp_isc <= 2) ~ "Completely caring",
all(copp_isc >= 3) ~ "Very completely caring"))
no_dependents <- access_15_bycategory |> filter(Care_Category == "Errand-centric"|
Care_Category == "Grocery-centric" |
Care_Category == "Health-centric") |>
group_by(from_id) |>
summarise(Care_Access_Status = case_when(all(copp_ic = 0 ) ~ "Not caring",
all(copp_ic >= 1 & copp_ic <= 2) ~ "Caring",
all(copp_ic >= 3) ~ "Very caring"),
copp_isc = sum(copp_ic),
V_isc = sum(V_ic),
Population = first(Population),
COMMUNITY_ = first(COMMUNITY_))
no_dependents2 <- access_15 |> filter(Care_Category == "Errand-centric"|
Care_Category == "Grocery-centric" |
Care_Category == "Health-centric") |>
group_by(from_id) |>
summarise(Care_Access_Status2 = case_when(all(copp_isc >= 1 | copp_isc <= 2) ~ "Completely caring",
all(copp_isc >= 3) ~ "Very completely caring"))
no_dependents <- no_dependents |> left_join(no_dependents2, by= c("from_id"))
View(no_dependents)
no_dependents <- access_15_bycategory |> filter(Care_Category == "Errand-centric"|
Care_Category == "Grocery-centric" |
Care_Category == "Health-centric") |>
group_by(from_id) |>
summarise(Care_Access_Status = case_when(all(copp_ic = 0 ) ~ "Not caring",
all(copp_ic >= 1 & copp_ic <= 2) ~ "Caring",
all(copp_ic >= 3) ~ "Very caring"),
copp_isc = sum(copp_ic),
V_isc = sum(V_ic),
Population = first(Population),
COMMUNITY_ = first(COMMUNITY_))
no_dependents2 <- access_15 |> filter(Care_Category == "Errand-centric"|
Care_Category == "Grocery-centric" |
Care_Category == "Health-centric") |>
group_by(from_id) |>
summarise(Care_Access_Status2 = case_when(all(copp_isc <= 2) ~ "Completely caring",
all(copp_isc >= 3) ~ "Very completely caring"))
no_dependents <- no_dependents |> left_join(no_dependents2, by= c("from_id"))
View(no_dependents)
no_dependents <- access_15_bycategory |> filter(Care_Category == "Errand-centric"|
Care_Category == "Grocery-centric" |
Care_Category == "Health-centric") |>
group_by(from_id) |>
summarise(Care_Access_Status = case_when(all(copp_ic = 0 ) ~ "Not caring",
all(copp_ic >= 1 & copp_ic <= 2) ~ "Caring",
all(copp_ic >= 3) ~ "Very caring"),
copp_isc = sum(copp_ic),
V_isc = sum(V_ic),
Population = first(Population),
COMMUNITY_ = first(COMMUNITY_))
no_dependents2 <- access_15 |> filter(Care_Category == "Errand-centric"|
Care_Category == "Grocery-centric" |
Care_Category == "Health-centric") |>
group_by(from_id) |>
summarise(Care_Access_Status2 = case_when(all(copp_isc = 1) ~ "Completely caring",
all(copp_isc >= 2) ~ "Very completely caring"))
no_dependents <- no_dependents |> left_join(no_dependents2, by= c("from_id"))
View(no_dependents)
View(access_15)
no_dependents <- access_15_bycategory |> filter(Care_Category == "Errand-centric"|
Care_Category == "Grocery-centric" |
Care_Category == "Health-centric") |>
group_by(from_id) |>
summarise(Care_Access_Status = case_when(all(copp_ic = 0 ) ~ "Not caring",
all(copp_ic >= 1 & copp_ic <= 2) ~ "Caring",
all(copp_ic >= 3) ~ "Very caring"),
copp_isc = sum(copp_ic),
V_isc = sum(V_ic),
Population = first(Population),
COMMUNITY_ = first(COMMUNITY_))
no_dependents2 <- access_15 |> filter(Care_Category == "Errand-centric"|
Care_Category == "Grocery-centric" |
Care_Category == "Health-centric") |>
group_by(from_id) |>
summarise(Care_Access_Status2 = case_when(all(copp_isc = 1) ~ "Completely caring",
all(copp_isc >= 2) ~ "Very completely caring"))
no_dependents <- no_dependents |> left_join(no_dependents2, by= c("from_id"))
View(no_dependents)
no_dependents <- access_15_bycategory |> filter(Care_Category == "Errand-centric"|
Care_Category == "Grocery-centric" |
Care_Category == "Health-centric") |>
group_by(from_id) |>
summarise(Care_Access_Status = case_when(all(copp_ic == 0) ~ "Not caring",
all(copp_ic >= 1 & copp_ic <= 2) ~ "Caring",
all(copp_ic >= 3) ~ "Very caring"),
copp_isc = sum(copp_ic),
V_isc = sum(V_ic),
Population = first(Population),
COMMUNITY_ = first(COMMUNITY_))
no_dependents2 <- access_15 |> filter(Care_Category == "Errand-centric"|
Care_Category == "Grocery-centric" |
Care_Category == "Health-centric") |>
group_by(from_id) |>
summarise(Care_Access_Status2 = case_when(all(copp_isc = 1) ~ "Completely caring",
all(copp_isc >= 2) ~ "Very completely caring"))
no_dependents <- no_dependents |> left_join(no_dependents2, by= c("from_id"))
View(no_dependents)
no_dependents2 <- access_15 |> filter(Care_Category == "Errand-centric"|
Care_Category == "Grocery-centric" |
Care_Category == "Health-centric") |>
group_by(from_id) |>
summarise(Care_Access_Status2 = case_when(all(copp_isc >= 1 & copp_isc < 2) ~ "Completely caring",
all(copp_isc >= 2) ~ "Very completely caring"))
no_dependents <- access_15_bycategory |> filter(Care_Category == "Errand-centric"|
Care_Category == "Grocery-centric" |
Care_Category == "Health-centric") |>
group_by(from_id) |>
summarise(Care_Access_Status = case_when(all(copp_ic == 0) ~ "Not caring",
all(copp_ic >= 1 & copp_ic <= 2) ~ "Caring",
all(copp_ic >= 3) ~ "Very caring"),
copp_isc = sum(copp_ic),
V_isc = sum(V_ic),
Population = first(Population),
COMMUNITY_ = first(COMMUNITY_))
no_dependents2 <- access_15 |> filter(Care_Category == "Errand-centric"|
Care_Category == "Grocery-centric" |
Care_Category == "Health-centric") |>
group_by(from_id) |>
summarise(Care_Access_Status2 = case_when(all(copp_isc >= 1 & copp_isc < 2) ~ "Completely caring",
all(copp_isc >= 2) ~ "Very completely caring"))
no_dependents <- no_dependents |> left_join(no_dependents2, by= c("from_id"))
View(no_dependents)
rm(list = ls())
library(biscale)
library(cowplot)
library(sf)
library(here)
library(dplyr)
library(tmap)
library(mapview)
library(tmaptools)
library(pander)
library(flextable)
library(ftExtra)
library(scales)
sp_avail_detailed <- function(x, o_id, d_id, pop, opp, r, f, alpha = 1){
o_id <- rlang::enquo(o_id)
d_id <- rlang::enquo(d_id)
pop <- rlang::enquo(pop)
opp <- rlang::enquo(opp)
r <- rlang::enquo(r)
f <- rlang::enquo(f)
sum_pop <- x |>
dplyr::distinct(!!o_id,
.keep_all = TRUE) |>
dplyr::mutate(sum_pop = !!r*(!!pop)^alpha) |>
dplyr::pull(sum_pop) |>
sum()
f_p <- dplyr::pull(x, !!r) * dplyr::pull(x, !!pop)^alpha / sum_pop
sum_impedance <- x |>
dplyr::group_by(!!d_id) |>
dplyr::summarize(sum_impedance = sum(!!f))
x <- x |>
dplyr::left_join(sum_impedance,
by = rlang::as_name(d_id))
f_c <- dplyr::pull(x, !!f) / x$sum_impedance
x$f_c <- f_c
x$f_p <- f_p
sum_pa <- x |>
dplyr::group_by(!!d_id) |>
dplyr::summarize(sum_pa= sum(f_p * f_c))
x <- x |>
dplyr::left_join(sum_pa,
by = rlang::as_name(d_id))
x$f_t <- (f_p * f_c) / dplyr::pull(x, sum_pa)
x |>
dplyr::mutate(V_ij = !!opp * f_t)
}
#boundaries for mapping
Community_Boundaries <- st_read("data-raw/Community_Boundaries.shp") |> mutate(COMMUNITY_ = ifelse(COMMUNITY_ == "Hamilton", "Hamilton-Central", COMMUNITY_))|> st_transform(crs=4326)
City_Boundary <- st_read("data-raw/City_Boundary.shp") |> st_transform(crs=4326)
hydro_p_LakeOntario <- st_read("data-raw/hydro_p_LakeOntario.shp") |> st_transform(crs=4326)
ham_bay <- st_read("data-raw/Waterbodies.shp") |> st_transform(crs=4326) |> filter(FEATURE_TY == "Lake")
ham_bay_cropped<-st_crop(ham_bay$geometry, Community_Boundaries$geometry)
hydro_p_LakeOntario_cropped<-st_crop(hydro_p_LakeOntario$geometry, Community_Boundaries$geometry)
load("care_dest.rda")
load("ttm_care_walk.rda")
load("HAM_census_21.rda")
HAM_census_21 <- HAM_census_21 |>
rename("LICO_AT_TOTAL" = `v_CA21_1085: Prevalence of low income based on the Low-income cut-offs, after tax (LICO-AT) (%)`) |>
mutate(LICO_AT_TOTAL = ifelse(is.na(LICO_AT_TOTAL), 0, LICO_AT_TOTAL)) |>
rowwise() |> mutate(
perc_walked = (`v_CA21_7647: Walked`)/sum(`v_CA21_7647: Walked`,`v_CA21_7635: Car, truck or van`, `v_CA21_7644: Public transit`,`v_CA21_7650: Bicycle`, `v_CA21_7653: Other method`, na.rm=TRUE),
perc_car = (`v_CA21_7635: Car, truck or van`)/sum(`v_CA21_7647: Walked`,`v_CA21_7635: Car, truck or van`, `v_CA21_7644: Public transit`,`v_CA21_7650: Bicycle`, `v_CA21_7653: Other method`, na.rm=TRUE),
perc_transit = (`v_CA21_7644: Public transit`)/sum(`v_CA21_7647: Walked`,`v_CA21_7635: Car, truck or van`, `v_CA21_7644: Public transit`,`v_CA21_7650: Bicycle`, `v_CA21_7653: Other method`, na.rm=TRUE),
perc_cycle_other = (`v_CA21_7650: Bicycle`+ `v_CA21_7653: Other method`)/sum(`v_CA21_7647: Walked`,`v_CA21_7635: Car, truck or van`, `v_CA21_7644: Public transit`,`v_CA21_7650: Bicycle`, `v_CA21_7653: Other method`, na.rm=TRUE),
pop_den = Population/`Shape Area`) |>
select(c("GeoUID", "Population", "LICO_AT_TOTAL", "perc_walked", "perc_car", "perc_transit", "perc_cycle_other", "pop_den"))
HAM_census_21 <- st_join(HAM_census_21, Community_Boundaries|> select("COMMUNITY_"), largest=TRUE)
DA_centroids <- HAM_census_21 |> st_centroid()
care_dest <- care_dest |>
mutate(Care_Category_Specific = case_when(
Care_Category_Specific  == "Daycare_EarlyON" ~ "Daycare or EarlyON",
Care_Category_Specific == "Community_Centre" ~ "Community or Recreation Centre",
Care_Category_Specific == "Daycare_Centre" ~ "Daycare or EarlyON",
Care_Category_Specific == "Recreation_Centre" ~ "Community or Recreation Centre",
Care_Category_Specific == "School" ~ "School",
Care_Category_Specific == "Long-Term_Care_Home" ~ "Long-Term Care or Retirement Home",
Care_Category_Specific == "Retirement_Home" ~ "Long-Term Care or Retirement Home",
Care_Category_Specific == "Senior_Centre" ~ "Senior Centre",
Care_Category_Specific == "Seniors_Active_Living_Centre" ~ "Senior Centre",
Care_Category_Specific == "Post_Office" ~ "Post Office",
Care_Category_Specific == "Library" ~ "Library",
Care_Category_Specific == "Banks" ~ "Bank or ATM",
Care_Category_Specific == "Grocer_ConvenienceStore" ~ "Convenience Store",
Care_Category_Specific == "Clinics" ~ "Hospital or Clinic",
Care_Category_Specific == "Grocer_Retail" ~ "Grocer",
Care_Category_Specific == "Dentist" ~ "Dentist",
Care_Category_Specific == "Hosptial" ~ "Hospital or Clinic",
Care_Category_Specific == "Hospital" ~ "Hospital or Clinic",
Care_Category_Specific == "Pharmacy" ~ "Pharmacy",
Care_Category_Specific == "Park" ~ "Park"),
Care_Category = case_when(
Care_Category == "Child_Centric" ~ "Dependent-centric",
Care_Category == "Elder_Centric" ~ "Dependent-centric",
Care_Category == "Errand_Centric" ~ "Errand-centric",
Care_Category == "Grocery_Centric" ~ "Grocery-centric",
Care_Category == "Health_Centric" ~ "Health-centric"))
#15 mins or less
ttm_care_walk_15 <- ttm_care_walk |>
filter(travel_time_p50 <= 15) |> select(-c("travel_time_p25", "travel_time_p75")) |>
left_join(
care_dest |> st_drop_geometry() |> select(c("ID", "Care_Category", "Care_Category_Specific", "Care_Category_Speciality")) |>
mutate(ID = as.character(ID)),
by = c("to_id" = "ID")) |>
mutate(f = 1)
ttm_care_walk_15 <- ttm_care_walk_15 |>
left_join(HAM_census_21 |> st_drop_geometry() |> select(c("GeoUID", "Population", "LICO_AT_TOTAL")), by=c("from_id" = "GeoUID"))
access_15 <- ttm_care_walk_15 |> group_by(from_id,Care_Category, Care_Category_Specific) |> summarize(copp_isc = n())
test_all <- ttm_care_walk_15 |>
sp_avail_detailed(o_id = from_id,
d_id = to_id,
pop = Population,
opp = f,
r = f,
f = f, alpha = 1) |> group_by(from_id, Care_Category, Care_Category_Specific) |> summarize(V_isc = sum(V_ij, na.rm = TRUE))
access_15 <- access_15 |> left_join(test_all, by=c("from_id", "Care_Category", "Care_Category_Specific")) |> ungroup()
rm(test_all)
access_15$V_isc |> sum(na.rm = TRUE) #sums to 1997 opportunities -- out of 2225 total opportunities
# all speciality categories should be represented, i.e., each ID should have 14 rows -- if that category is empty it should be 0. Let's add those 0s.
access_15_zeros <-
data.frame(from_id = rep(HAM_census_21$GeoUID, length(access_15$Care_Category_Specific |> unique())),
Care_Category = rep(c("Dependent-centric", "Dependent-centric", "Grocery-centric", "Dependent-centric",
"Dependent-centric", "Dependent-centric",
"Errand-centric", "Errand-centric",
"Grocery-centric","Health-centric",
"Health-centric", "Errand-centric",
"Dependent-centric", "Health-centric"), length(HAM_census_21$GeoUID)),
Care_Category_Specific = rep(c("Park", "Daycare or EarlyON", "Convenience Store", "School",
"Long-Term Care or Retirement Home", "Senior Centre",
"Bank or ATM", "Library",
"Grocer", "Dentist",
"Pharmacy", "Post Office",
"Community or Recreation Centre", "Hospital or Clinic"), length(HAM_census_21$GeoUID)),
copp_isc = rep(0, length(HAM_census_21$GeoUID)*length(c("Park", "Daycare or EarlyON", "Convenience Store", "School",
"Long-Term Care or Retirement Home", "Senior Centre",
"Bank or ATM", "Library",
"Grocer", "Dentist",
"Pharmacy", "Post Office",
"Community or Recreation Centre", "Hospital or Clinic"))),
V_isc = rep(0, length(HAM_census_21$GeoUID)*length(c("Park", "Daycare or EarlyON", "Convenience Store", "School",
"Long-Term Care or Retirement Home", "Senior Centre",
"Bank or ATM", "Library",
"Grocer", "Dentist",
"Pharmacy", "Post Office",
"Community or Recreation Centre", "Hospital or Clinic"))))
access_15 <- bind_rows(access_15_zeros, access_15) |>
group_by(from_id, Care_Category, Care_Category_Specific) |>
summarize(copp_isc = sum(copp_isc),
V_isc = sum(V_isc))
access_15_bycategory <- access_15 |> group_by(from_id, Care_Category)  |>
summarize(copp_ic = sum(copp_isc, na.rm=T),
V_ic = sum(V_isc, na.rm = T))
access_15 <- access_15 |>
left_join(HAM_census_21 |> st_drop_geometry() |> select(c("GeoUID", "Population", "LICO_AT_TOTAL", "COMMUNITY_")),
by=c("from_id" = "GeoUID")) |>
mutate(copp_isc_perpop = copp_isc/Population,
v_isc = V_isc/Population) |> ungroup()
access_15_bycategory <- access_15_bycategory |>
left_join(HAM_census_21 |> st_drop_geometry() |> select(c("GeoUID", "Population", "LICO_AT_TOTAL", "COMMUNITY_")),
by=c("from_id" = "GeoUID")) |>
mutate(copp_ic_perpop = copp_ic/Population,
v_ic = V_ic/Population) |> ungroup()
rm(access_15_zeros)
# access_15
# access_15 |> select(c(Care_Category, Care_Category_Specific)) |> unique()
# access_15 |> filter(Care_Category == c("Errand-centric", "Grocery-centric","Health-centric"))
no_dependents <- access_15_bycategory |> filter(Care_Category == "Errand-centric"|
Care_Category == "Grocery-centric" |
Care_Category == "Health-centric") |>
group_by(from_id) |>
summarise(Care_Access_Status = case_when(all(copp_ic == 0) ~ "Not caring",
all(copp_ic >= 1 & copp_ic <= 2) ~ "Caring",
all(copp_ic >= 3) ~ "Very caring"),
copp_isc = sum(copp_ic),
V_isc = sum(V_ic),
Population = first(Population),
COMMUNITY_ = first(COMMUNITY_))
no_dependents2 <- access_15 |> filter(Care_Category == "Errand-centric"|
Care_Category == "Grocery-centric" |
Care_Category == "Health-centric") |>
group_by(from_id) |>
summarise(Care_Access_Status2 = case_when(all(copp_isc >= 1 & copp_isc < 2) ~ "Completely caring",
all(copp_isc >= 2) ~ "Very completely caring"))
no_dependents <- no_dependents |> left_join(no_dependents2, by= c("from_id"))
all_cats <- access_15 |> group_by(from_id) |>
summarise(Complete = ifelse(all(c_opp > 0 ), 1, 0),
c_opp = sum(c_opp),
V_ic = sum(V_ic),
Population = first(Population),
COMMUNITY_ = first(COMMUNITY_))
rm(list = ls())
library(biscale)
library(cowplot)
library(sf)
library(here)
library(dplyr)
library(tmap)
library(mapview)
library(tmaptools)
library(pander)
library(flextable)
library(ftExtra)
library(scales)
sp_avail_detailed <- function(x, o_id, d_id, pop, opp, r, f, alpha = 1){
o_id <- rlang::enquo(o_id)
d_id <- rlang::enquo(d_id)
pop <- rlang::enquo(pop)
opp <- rlang::enquo(opp)
r <- rlang::enquo(r)
f <- rlang::enquo(f)
sum_pop <- x |>
dplyr::distinct(!!o_id,
.keep_all = TRUE) |>
dplyr::mutate(sum_pop = !!r*(!!pop)^alpha) |>
dplyr::pull(sum_pop) |>
sum()
f_p <- dplyr::pull(x, !!r) * dplyr::pull(x, !!pop)^alpha / sum_pop
sum_impedance <- x |>
dplyr::group_by(!!d_id) |>
dplyr::summarize(sum_impedance = sum(!!f))
x <- x |>
dplyr::left_join(sum_impedance,
by = rlang::as_name(d_id))
f_c <- dplyr::pull(x, !!f) / x$sum_impedance
x$f_c <- f_c
x$f_p <- f_p
sum_pa <- x |>
dplyr::group_by(!!d_id) |>
dplyr::summarize(sum_pa= sum(f_p * f_c))
x <- x |>
dplyr::left_join(sum_pa,
by = rlang::as_name(d_id))
x$f_t <- (f_p * f_c) / dplyr::pull(x, sum_pa)
x |>
dplyr::mutate(V_ij = !!opp * f_t)
}
#boundaries for mapping
Community_Boundaries <- st_read("data-raw/Community_Boundaries.shp") |> mutate(COMMUNITY_ = ifelse(COMMUNITY_ == "Hamilton", "Hamilton-Central", COMMUNITY_))|> st_transform(crs=4326)
City_Boundary <- st_read("data-raw/City_Boundary.shp") |> st_transform(crs=4326)
hydro_p_LakeOntario <- st_read("data-raw/hydro_p_LakeOntario.shp") |> st_transform(crs=4326)
ham_bay <- st_read("data-raw/Waterbodies.shp") |> st_transform(crs=4326) |> filter(FEATURE_TY == "Lake")
ham_bay_cropped<-st_crop(ham_bay$geometry, Community_Boundaries$geometry)
hydro_p_LakeOntario_cropped<-st_crop(hydro_p_LakeOntario$geometry, Community_Boundaries$geometry)
load("care_dest.rda")
load("ttm_care_walk.rda")
load("HAM_census_21.rda")
HAM_census_21 <- HAM_census_21 |>
rename("LICO_AT_TOTAL" = `v_CA21_1085: Prevalence of low income based on the Low-income cut-offs, after tax (LICO-AT) (%)`) |>
mutate(LICO_AT_TOTAL = ifelse(is.na(LICO_AT_TOTAL), 0, LICO_AT_TOTAL)) |>
rowwise() |> mutate(
perc_walked = (`v_CA21_7647: Walked`)/sum(`v_CA21_7647: Walked`,`v_CA21_7635: Car, truck or van`, `v_CA21_7644: Public transit`,`v_CA21_7650: Bicycle`, `v_CA21_7653: Other method`, na.rm=TRUE),
perc_car = (`v_CA21_7635: Car, truck or van`)/sum(`v_CA21_7647: Walked`,`v_CA21_7635: Car, truck or van`, `v_CA21_7644: Public transit`,`v_CA21_7650: Bicycle`, `v_CA21_7653: Other method`, na.rm=TRUE),
perc_transit = (`v_CA21_7644: Public transit`)/sum(`v_CA21_7647: Walked`,`v_CA21_7635: Car, truck or van`, `v_CA21_7644: Public transit`,`v_CA21_7650: Bicycle`, `v_CA21_7653: Other method`, na.rm=TRUE),
perc_cycle_other = (`v_CA21_7650: Bicycle`+ `v_CA21_7653: Other method`)/sum(`v_CA21_7647: Walked`,`v_CA21_7635: Car, truck or van`, `v_CA21_7644: Public transit`,`v_CA21_7650: Bicycle`, `v_CA21_7653: Other method`, na.rm=TRUE),
pop_den = Population/`Shape Area`) |>
select(c("GeoUID", "Population", "LICO_AT_TOTAL", "perc_walked", "perc_car", "perc_transit", "perc_cycle_other", "pop_den"))
HAM_census_21 <- st_join(HAM_census_21, Community_Boundaries|> select("COMMUNITY_"), largest=TRUE)
DA_centroids <- HAM_census_21 |> st_centroid()
care_dest <- care_dest |>
mutate(Care_Category_Specific = case_when(
Care_Category_Specific  == "Daycare_EarlyON" ~ "Daycare or EarlyON",
Care_Category_Specific == "Community_Centre" ~ "Community or Recreation Centre",
Care_Category_Specific == "Daycare_Centre" ~ "Daycare or EarlyON",
Care_Category_Specific == "Recreation_Centre" ~ "Community or Recreation Centre",
Care_Category_Specific == "School" ~ "School",
Care_Category_Specific == "Long-Term_Care_Home" ~ "Long-Term Care or Retirement Home",
Care_Category_Specific == "Retirement_Home" ~ "Long-Term Care or Retirement Home",
Care_Category_Specific == "Senior_Centre" ~ "Senior Centre",
Care_Category_Specific == "Seniors_Active_Living_Centre" ~ "Senior Centre",
Care_Category_Specific == "Post_Office" ~ "Post Office",
Care_Category_Specific == "Library" ~ "Library",
Care_Category_Specific == "Banks" ~ "Bank or ATM",
Care_Category_Specific == "Grocer_ConvenienceStore" ~ "Convenience Store",
Care_Category_Specific == "Clinics" ~ "Hospital or Clinic",
Care_Category_Specific == "Grocer_Retail" ~ "Grocer",
Care_Category_Specific == "Dentist" ~ "Dentist",
Care_Category_Specific == "Hosptial" ~ "Hospital or Clinic",
Care_Category_Specific == "Hospital" ~ "Hospital or Clinic",
Care_Category_Specific == "Pharmacy" ~ "Pharmacy",
Care_Category_Specific == "Park" ~ "Park"),
Care_Category = case_when(
Care_Category == "Child_Centric" ~ "Dependent-centric",
Care_Category == "Elder_Centric" ~ "Dependent-centric",
Care_Category == "Errand_Centric" ~ "Errand-centric",
Care_Category == "Grocery_Centric" ~ "Grocery-centric",
Care_Category == "Health_Centric" ~ "Health-centric"))
#15 mins or less
ttm_care_walk_15 <- ttm_care_walk |>
filter(travel_time_p50 <= 15) |> select(-c("travel_time_p25", "travel_time_p75")) |>
left_join(
care_dest |> st_drop_geometry() |> select(c("ID", "Care_Category", "Care_Category_Specific", "Care_Category_Speciality")) |>
mutate(ID = as.character(ID)),
by = c("to_id" = "ID")) |>
mutate(f = 1)
ttm_care_walk_15 <- ttm_care_walk_15 |>
left_join(HAM_census_21 |> st_drop_geometry() |> select(c("GeoUID", "Population", "LICO_AT_TOTAL")), by=c("from_id" = "GeoUID"))
access_15 <- ttm_care_walk_15 |> group_by(from_id,Care_Category, Care_Category_Specific) |> summarize(copp_isc = n())
test_all <- ttm_care_walk_15 |>
sp_avail_detailed(o_id = from_id,
d_id = to_id,
pop = Population,
opp = f,
r = f,
f = f, alpha = 1) |> group_by(from_id, Care_Category, Care_Category_Specific) |> summarize(V_isc = sum(V_ij, na.rm = TRUE))
access_15 <- access_15 |> left_join(test_all, by=c("from_id", "Care_Category", "Care_Category_Specific")) |> ungroup()
rm(test_all)
access_15$V_isc |> sum(na.rm = TRUE) #sums to 1997 opportunities -- out of 2225 total opportunities
# all speciality categories should be represented, i.e., each ID should have 14 rows -- if that category is empty it should be 0. Let's add those 0s.
access_15_zeros <-
data.frame(from_id = rep(HAM_census_21$GeoUID, length(access_15$Care_Category_Specific |> unique())),
Care_Category = rep(c("Dependent-centric", "Dependent-centric", "Grocery-centric", "Dependent-centric",
"Dependent-centric", "Dependent-centric",
"Errand-centric", "Errand-centric",
"Grocery-centric","Health-centric",
"Health-centric", "Errand-centric",
"Dependent-centric", "Health-centric"), length(HAM_census_21$GeoUID)),
Care_Category_Specific = rep(c("Park", "Daycare or EarlyON", "Convenience Store", "School",
"Long-Term Care or Retirement Home", "Senior Centre",
"Bank or ATM", "Library",
"Grocer", "Dentist",
"Pharmacy", "Post Office",
"Community or Recreation Centre", "Hospital or Clinic"), length(HAM_census_21$GeoUID)),
copp_isc = rep(0, length(HAM_census_21$GeoUID)*length(c("Park", "Daycare or EarlyON", "Convenience Store", "School",
"Long-Term Care or Retirement Home", "Senior Centre",
"Bank or ATM", "Library",
"Grocer", "Dentist",
"Pharmacy", "Post Office",
"Community or Recreation Centre", "Hospital or Clinic"))),
V_isc = rep(0, length(HAM_census_21$GeoUID)*length(c("Park", "Daycare or EarlyON", "Convenience Store", "School",
"Long-Term Care or Retirement Home", "Senior Centre",
"Bank or ATM", "Library",
"Grocer", "Dentist",
"Pharmacy", "Post Office",
"Community or Recreation Centre", "Hospital or Clinic"))))
access_15 <- bind_rows(access_15_zeros, access_15) |>
group_by(from_id, Care_Category, Care_Category_Specific) |>
summarize(copp_isc = sum(copp_isc),
V_isc = sum(V_isc))
access_15_bycategory <- access_15 |> group_by(from_id, Care_Category)  |>
summarize(copp_ic = sum(copp_isc, na.rm=T),
V_ic = sum(V_isc, na.rm = T))
access_15 <- access_15 |>
left_join(HAM_census_21 |> st_drop_geometry() |> select(c("GeoUID", "Population", "LICO_AT_TOTAL", "COMMUNITY_")),
by=c("from_id" = "GeoUID")) |>
mutate(copp_isc_perpop = copp_isc/Population,
v_isc = V_isc/Population) |> ungroup()
access_15_bycategory <- access_15_bycategory |>
left_join(HAM_census_21 |> st_drop_geometry() |> select(c("GeoUID", "Population", "LICO_AT_TOTAL", "COMMUNITY_")),
by=c("from_id" = "GeoUID")) |>
mutate(copp_ic_perpop = copp_ic/Population,
v_ic = V_ic/Population) |> ungroup()
rm(access_15_zeros)
# access_15
# access_15 |> select(c(Care_Category, Care_Category_Specific)) |> unique()
# access_15 |> filter(Care_Category == c("Errand-centric", "Grocery-centric","Health-centric"))
no_dependents <- access_15_bycategory |> filter(Care_Category == "Errand-centric"|
Care_Category == "Grocery-centric" |
Care_Category == "Health-centric") |>
group_by(from_id) |>
summarise(Care_Access_Status = case_when(all(copp_ic == 0) ~ "Not caring",
all(copp_ic >= 1 & copp_ic <= 2) ~ "Caring",
all(copp_ic >= 3) ~ "Very caring"),
copp_isc = sum(copp_ic),
V_isc = sum(V_ic),
Population = first(Population),
COMMUNITY_ = first(COMMUNITY_))
no_dependents2 <- access_15 |> filter(Care_Category == "Errand-centric"|
Care_Category == "Grocery-centric" |
Care_Category == "Health-centric") |>
group_by(from_id) |>
summarise(Care_Access_Status2 = case_when(all(copp_isc >= 1 & copp_isc < 2) ~ "Completely caring",
all(copp_isc >= 2) ~ "Very completely caring"))
no_dependents <- no_dependents |> left_join(no_dependents2, by= c("from_id"))
all_cats <- access_15 |> group_by(from_id) |>
summarise(Complete = ifelse(all(c_opp > 0 ), 1, 0),
c_opp = sum(c_opp),
V_ic = sum(V_ic),
Population = first(Population),
COMMUNITY_ = first(COMMUNITY_))
no_dependents
